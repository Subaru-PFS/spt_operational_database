"""iic_sequence_id

Revision ID: c677f4b7827d
Revises: 60f6e707c30e
Create Date: 2022-11-01 12:04:21.005689

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'c677f4b7827d'
down_revision = '60f6e707c30e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #
    op.alter_column('iic_sequence', 'visit_set_id', new_column_name='iic_sequence_id')
    op.alter_column('iic_sequence_status', 'visit_set_id', new_column_name='iic_sequence_id')
    op.alter_column('visit_set', 'visit_set_id', new_column_name='iic_sequence_id')
    op.alter_column('field_set', 'visit_set_id', new_column_name='iic_sequence_id')
    op.alter_column('obslog_visit_set_note', 'visit_set_id', new_column_name='iic_sequence_id')

    op.alter_column('iic_sequence', 'iic_sequence_id',
                    existing_type=sa.INTEGER(),
                    comment='Sequence identifier',
                    existing_comment='Visit set identifier',
                    existing_nullable=False,
                    autoincrement=False)
    op.alter_column('iic_sequence_status', 'iic_sequence_id',
                    existing_type=sa.INTEGER(),
                    comment='Sequence identifier',
                    existing_comment='Visit set identifier',
                    existing_nullable=False,
                    autoincrement=False)

    op.add_column('iic_sequence',
                  sa.Column('group_id', sa.Integer(), autoincrement=False, comment='Group identifier'))

    op.execute("UPDATE iic_sequence SET group_id = iic_sequence_id")
    op.alter_column('iic_sequence', 'group_id', nullable=False)

    # important is above.

    op.alter_column('agc_data', 'image_moment_00_pix',
                    existing_type=sa.REAL(),
                    comment='',
                    existing_nullable=True)

    op.add_column('mcs_pfi_transformation', sa.Column('x0', sa.REAL(), nullable=True, comment='Transformation x shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('y0', sa.REAL(), nullable=True, comment='Transformation y shift'))
    op.add_column('mcs_pfi_transformation',
                  sa.Column('dscale', sa.REAL(), nullable=True, comment='First transformation scale'))
    op.add_column('mcs_pfi_transformation',
                  sa.Column('scale2', sa.REAL(), nullable=True, comment='Second transformation scale'))
    op.add_column('mcs_pfi_transformation',
                  sa.Column('theta', sa.REAL(), nullable=True, comment='Transformation rotation angle'))
    op.add_column('mcs_pfi_transformation', sa.Column('alpha_rot', sa.REAL(), nullable=True,
                                                      comment='coefficient for the dtheta^2 term in the penalty function'))
    op.add_column('mcs_pfi_transformation', sa.Column('camera_name', sa.String(), nullable=True,
                                                      comment='camera name for transformation function'))
    op.drop_column('mcs_pfi_transformation', 'x_trans')
    op.drop_column('mcs_pfi_transformation', 'angle')
    op.drop_column('mcs_pfi_transformation', 'y_scale')
    op.drop_column('mcs_pfi_transformation', 'x_scale')
    op.drop_column('mcs_pfi_transformation', 'y_trans')

    op.add_column('tel_status',
                  sa.Column('dither_ra', sa.REAL(), nullable=True, comment='Offset to the R.A. coordinate [arcsec]'))
    op.add_column('tel_status',
                  sa.Column('dither_dec', sa.REAL(), nullable=True, comment='Offset to the DEC. coordinate [arcsec]'))
    op.add_column('tel_status',
                  sa.Column('dither_pa', sa.REAL(), nullable=True, comment='Offset to the INST_PA [arcsec]'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column('iic_sequence', 'iic_sequence_id', new_column_name='visit_set_id')
    op.alter_column('iic_sequence_status', 'iic_sequence_id', new_column_name='iic_sequence_id')
    op.alter_column('visit_set', 'iic_sequence_id', new_column_name='iic_sequence_id')
    op.alter_column('field_set', 'iic_sequence_id', new_column_name='iic_sequence_id')
    op.alter_column('obslog_visit_set_note', 'iic_sequence_id', new_column_name='iic_sequence_id')

    op.alter_column('iic_sequence', 'visit_set_id',
                    existing_type=sa.INTEGER(),

                    comment='Visit set identifier',
                    existing_comment='Sequence identifier',
                    existing_nullable=False,
                    autoincrement=False)
    op.alter_column('iic_sequence_status', 'iic_sequence_id',
                    existing_type=sa.INTEGER(),
                    comment='Visit set identifier',
                    existing_comment='Sequence identifier',
                    existing_nullable=False,
                    autoincrement=False)

    op.drop_column('tel_status', 'dither_pa')
    op.drop_column('tel_status', 'dither_dec')
    op.drop_column('tel_status', 'dither_ra')

    op.add_column('mcs_pfi_transformation', sa.Column('y_trans', sa.REAL(), autoincrement=False, nullable=True,
                                                      comment='Affine transformation y shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('x_scale', sa.REAL(), autoincrement=False, nullable=True,
                                                      comment='Affine transformation x scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('y_scale', sa.REAL(), autoincrement=False, nullable=True,
                                                      comment='Affine transformation y scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('angle', sa.REAL(), autoincrement=False, nullable=True,
                                                      comment='Affine transformation rotation angle'))
    op.add_column('mcs_pfi_transformation', sa.Column('x_trans', sa.REAL(), autoincrement=False, nullable=True,
                                                      comment='Affine transformation x shift'))
    op.drop_column('mcs_pfi_transformation', 'camera_name')
    op.drop_column('mcs_pfi_transformation', 'alpha_rot')
    op.drop_column('mcs_pfi_transformation', 'theta')
    op.drop_column('mcs_pfi_transformation', 'scale2')
    op.drop_column('mcs_pfi_transformation', 'dscale')
    op.drop_column('mcs_pfi_transformation', 'y0')
    op.drop_column('mcs_pfi_transformation', 'x0')

    op.drop_column('iic_sequence', 'group_id')

    op.alter_column('agc_data', 'image_moment_00_pix',
                    existing_type=sa.REAL(),
                    comment=None,
                    existing_comment='',
                    existing_nullable=True)


    # ### end Alembic commands ###
