"""update to 0.1.8

Revision ID: efacacfa24d5
Revises: a64afbc58d16
Create Date: 2021-11-16 18:43:12.419943

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'efacacfa24d5'
down_revision = 'a64afbc58d16'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cobra_geometry_calib',
                    sa.Column('cobra_geometry_calib_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('calibrated_at', sa.DateTime(), nullable=True, comment='Date at which the model calibration took place [YYYY-MM-DDhh:mm:ss]'),
                    sa.Column('comments', sa.String(), nullable=True, comment='Comments'),
                    sa.PrimaryKeyConstraint('cobra_geometry_calib_id')
                    )

    op.create_unique_constraint(None, 'agc_match', ['agc_exposure_id', 'agc_camera_id', 'spot_id'])

    op.add_column('cobra_geometry', sa.Column('center_x_mm', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('center_y_mm', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_geometry_calib_id', sa.Integer(), autoincrement=False, nullable=False))
    op.add_column('cobra_geometry', sa.Column('motor_phi_length_mm', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('motor_phi_limit_in', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('motor_phi_limit_out', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('motor_theta_length_mm', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('motor_theta_limit0', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('motor_theta_limit1', sa.REAL(), nullable=True))
    op.add_column('cobra_geometry', sa.Column('status', sa.Integer(), nullable=True, comment='0x0001=OK/0x0002=INVISIBLE/0x0004=BROKEN_THETA/0x0008=BROKEN_PHI'))

    op.drop_constraint('cobra_geometry_cobra_motor_calib_id_cobra_id_key', 'cobra_geometry', type_='unique')
    op.create_unique_constraint(None, 'cobra_geometry', ['cobra_geometry_calib_id', 'cobra_id'])
    op.drop_constraint('cobra_geometry_cobra_motor_calib_id_fkey', 'cobra_geometry', type_='foreignkey')
    op.create_foreign_key(None, 'cobra_geometry', 'cobra_geometry_calib', ['cobra_geometry_calib_id'], ['cobra_geometry_calib_id'])

    op.drop_column('cobra_geometry', 'cobra_motor_calib_id')
    op.drop_column('cobra_geometry', 'cobra_motor_theta_limit1')
    op.drop_column('cobra_geometry', 'cobra_center_on_pfi_x_mm')
    op.drop_column('cobra_geometry', 'cobra_distance_from_center_mm')
    op.drop_column('cobra_geometry', 'cobra_motor_phi_limit_in')
    op.drop_column('cobra_geometry', 'cobra_motor_theta_limit0')
    op.drop_column('cobra_geometry', 'cobra_status')
    op.drop_column('cobra_geometry', 'cobra_motor_phi_limit_out')
    op.drop_column('cobra_geometry', 'cobra_motor_theta_length')
    op.drop_column('cobra_geometry', 'cobra_motor_phi_length')
    op.drop_column('cobra_geometry', 'cobra_center_on_pfi_y_mm')

    op.create_unique_constraint(None, 'pfs_config', ['visit0'])
    op.create_unique_constraint(None, 'pfs_config_agc', ['pfs_design_id', 'visit0', 'guide_star_id'])
    op.create_unique_constraint(None, 'pfs_design_agc', ['pfs_design_id', 'guide_star_id'])

    op.create_table('field_set',
                    sa.Column('visit_set_id', sa.Integer(), nullable=False),
                    sa.Column('visit0', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['visit0'], ['pfs_config.visit0'], ),
                    sa.ForeignKeyConstraint(['visit_set_id'], ['iic_sequence.visit_set_id'], ),
                    sa.PrimaryKeyConstraint('visit_set_id')
                    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'pfs_design_agc', type_='unique')
    op.drop_constraint(None, 'pfs_config_agc', type_='unique')
    op.drop_constraint(None, 'pfs_config', type_='unique')
    op.add_column('cobra_geometry', sa.Column('cobra_center_on_pfi_y_mm', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_phi_length', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_theta_length', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_phi_limit_out', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_status', sa.VARCHAR(), autoincrement=False, nullable=True, comment='OK/INVISIBLE/LOCKED_THETA/LOCKED_PHI/BAD_THETA/BAD_PHI'))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_theta_limit0', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_phi_limit_in', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_distance_from_center_mm', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_center_on_pfi_x_mm', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_theta_limit1', sa.REAL(), autoincrement=False, nullable=True))
    op.add_column('cobra_geometry', sa.Column('cobra_motor_calib_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'cobra_geometry', type_='foreignkey')
    op.create_foreign_key('cobra_geometry_cobra_motor_calib_id_fkey', 'cobra_geometry', 'cobra_motor_calib', ['cobra_motor_calib_id'], ['cobra_motor_calib_id'])
    op.drop_constraint(None, 'cobra_geometry', type_='unique')
    op.create_unique_constraint('cobra_geometry_cobra_motor_calib_id_cobra_id_key', 'cobra_geometry', ['cobra_motor_calib_id', 'cobra_id'])
    op.drop_column('cobra_geometry', 'status')
    op.drop_column('cobra_geometry', 'motor_theta_limit1')
    op.drop_column('cobra_geometry', 'motor_theta_limit0')
    op.drop_column('cobra_geometry', 'motor_theta_length_mm')
    op.drop_column('cobra_geometry', 'motor_phi_limit_out')
    op.drop_column('cobra_geometry', 'motor_phi_limit_in')
    op.drop_column('cobra_geometry', 'motor_phi_length_mm')
    op.drop_column('cobra_geometry', 'cobra_geometry_calib_id')
    op.drop_column('cobra_geometry', 'center_y_mm')
    op.drop_column('cobra_geometry', 'center_x_mm')
    op.drop_constraint(None, 'agc_match', type_='unique')
    op.alter_column('agc_data', 'image_moment_00_pix',
                    existing_type=sa.REAL(),
                    comment=None,
                    existing_comment='',
                    existing_nullable=True)
    op.create_table('test',
                    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('value', sa.REAL(), autoincrement=False, nullable=True)
                    )
    op.drop_table('field_set')
    op.drop_table('cobra_geometry_calib')
    # ### end Alembic commands ###
