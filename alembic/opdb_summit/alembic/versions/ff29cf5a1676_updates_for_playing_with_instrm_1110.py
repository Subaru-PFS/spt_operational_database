"""updates for playing with INSTRM-1110

Revision ID: ff29cf5a1676
Revises: 304faca33092
Create Date: 2021-07-14 21:49:38.709760

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ff29cf5a1676'
down_revision = '304faca33092'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('env_condition',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('status_sequence_id', sa.Integer(), autoincrement=False, nullable=False, comment='Gen2 status sequence'),
                    sa.Column('dome_temperature', sa.REAL(), nullable=True, comment='Dome temperature [K]'),
                    sa.Column('dome_pressure', sa.REAL(), nullable=True, comment='Dome pressure [hPa]'),
                    sa.Column('dome_humidity', sa.REAL(), nullable=True, comment='Dome humidity [%]'),
                    sa.Column('outside_temperature', sa.REAL(), nullable=True, comment='Outside temperature [K]'),
                    sa.Column('outside_pressure', sa.REAL(), nullable=True, comment='Outside pressure [hPa]'),
                    sa.Column('outside_humidity', sa.REAL(), nullable=True, comment='Outside humidity [%]'),
                    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Issued time [YYYY-MM-DDThh:mm:ss]'),
                    sa.ForeignKeyConstraint(['pfs_visit_id'], ['pfs_visit.pfs_visit_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'status_sequence_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'status_sequence_id')
                    )
    op.create_index(op.f('ix_env_condition_created_at'), 'env_condition', ['created_at'], unique=False)
    op.create_table('obs_condition',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('status_sequence_id', sa.Integer(), autoincrement=False, nullable=False, comment='Gen2 status sequence'),
                    sa.Column('airmass', sa.REAL(), nullable=True),
                    sa.Column('moon_phase', sa.REAL(), nullable=True),
                    sa.Column('moon_alt', sa.REAL(), nullable=True),
                    sa.Column('moon_sep', sa.REAL(), nullable=True),
                    sa.Column('seeing', sa.REAL(), nullable=True),
                    sa.Column('transparency', sa.REAL(), nullable=True),
                    sa.Column('cloud_condition_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Issued time [YYYY-MM-DDThh:mm:ss]'),
                    sa.ForeignKeyConstraint(['cloud_condition_id'], ['cloud_condition.cloud_condition_id'], ),
                    sa.ForeignKeyConstraint(['pfs_visit_id'], ['pfs_visit.pfs_visit_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'status_sequence_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'status_sequence_id')
                    )
    op.create_index(op.f('ix_obs_condition_created_at'), 'obs_condition', ['created_at'], unique=False)
    op.create_table('tel_status',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False),
                    sa.Column('status_sequence_id', sa.Integer(), autoincrement=False, nullable=False, comment='Gen2 status sequence'),
                    sa.Column('altitude', sa.REAL(), nullable=True, comment='The telescope altitude [deg]'),
                    sa.Column('azimuth', sa.REAL(), nullable=True, comment='The telescope azimuth [deg]'),
                    sa.Column('insrot', sa.REAL(), nullable=True, comment='The telescope instrument rotation angle [deg]'),
                    sa.Column('adc_pa', sa.REAL(), nullable=True, comment='ADC PA at which the exposure started [deg]'),
                    sa.Column('m2_pos3', sa.REAL(), nullable=True, comment='Hexapod position [mm]'),
                    sa.Column('tel_ra', sa.REAL(), nullable=True, comment='The telescope target R.A. [deg]'),
                    sa.Column('tel_dec', sa.REAL(), nullable=True, comment='The telescope target Dec. [deg]'),
                    sa.Column('dome_shutter_status', sa.Integer(), nullable=True, comment='Dome slit status (open/close/unknown)'),
                    sa.Column('dome_light_status', sa.Integer(), nullable=True, comment='Dome (room) light mask interger'),
                    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Issued time [YYYY-MM-DDThh:mm:ss]'),
                    sa.ForeignKeyConstraint(['pfs_visit_id'], ['pfs_visit.pfs_visit_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'status_sequence_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'status_sequence_id')
                    )
    op.create_index(op.f('ix_tel_status_created_at'), 'tel_status', ['created_at'], unique=False)
    op.drop_table('tel_condition')
    op.drop_table('tel_visit')
    # op.drop_table('test')
    # op.alter_column('agc_data', 'image_moment_00_pix',
    #                existing_type=sa.REAL(),
    #                comment='',
    #                existing_nullable=True)
    op.drop_column('psf_model', 'tel_visit_id')
    op.drop_column('sky_model', 'tel_visit_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sky_model', sa.Column('tel_visit_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('psf_model', sa.Column('tel_visit_id', sa.INTEGER(), autoincrement=False, nullable=True))
    # op.alter_column('agc_data', 'image_moment_00_pix',
    #                existing_type=sa.REAL(),
    #                comment=None,
    #                existing_comment='',
    #                existing_nullable=True)
    op.create_table('tel_condition',
                    sa.Column('tel_visit_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('focusing_error', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('guide_error_sigma_arcsec', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('airmass', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('moon_phase', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('moon_alt', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('moon_sep', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('seeing', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('transp', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('cloud_condition_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['cloud_condition_id'], ['cloud_condition.cloud_condition_id'], name='tel_condition_cloud_condition_id_fkey'),
                    sa.ForeignKeyConstraint(['tel_visit_id'], ['tel_visit.tel_visit_id'], name='tel_condition_tel_visit_id_fkey'),
                    sa.PrimaryKeyConstraint('tel_visit_id', name='tel_condition_pkey'),
                    sa.UniqueConstraint('tel_visit_id', name='tel_condition_tel_visit_id_key')
                    )
    # op.create_table('test',
    #                sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    #                sa.Column('value', sa.REAL(), autoincrement=False, nullable=True)
    #                )
    op.create_table('tel_visit',
                    sa.Column('tel_visit_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('pfs_config_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('ra_tel', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('dec_tel', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('beam_switch_mode_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('beam_switch_offset_ra', sa.REAL(), autoincrement=False, nullable=True),
                    sa.Column('beam_switch_offset_dec', sa.REAL(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['beam_switch_mode_id'], ['beam_switch_mode.beam_switch_mode_id'], name='tel_visit_beam_switch_mode_id_fkey'),
                    sa.ForeignKeyConstraint(['pfs_config_id'], ['pfs_config.pfs_config_id'], name='tel_visit_pfs_config_id_fkey'),
                    sa.PrimaryKeyConstraint('tel_visit_id', name='tel_visit_pkey')
                    )
    op.drop_index(op.f('ix_tel_status_created_at'), table_name='tel_status')
    op.drop_table('tel_status')
    op.drop_index(op.f('ix_obs_condition_created_at'), table_name='obs_condition')
    op.drop_table('obs_condition')
    op.drop_index(op.f('ix_env_condition_created_at'), table_name='env_condition')
    op.drop_table('env_condition')
    # ### end Alembic commands ###
