"""update to 0.1.0

Revision ID: 44bb95de7b0b
Revises: 61a27fbcbc90
Create Date: 2021-06-25 09:11:10.432327

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44bb95de7b0b'
down_revision = '61a27fbcbc90'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agc_exposure',
                    sa.Column('agc_exposure_id', sa.Integer(), autoincrement=False, nullable=False, comment='AGC exposure number identifier'),
                    sa.Column('pfs_visit_id', sa.Integer(), nullable=True, comment='PFS visit identifier'),
                    sa.Column('agc_exptime', sa.REAL(), nullable=True, comment='The exposure time for the frame [sec]'),
                    sa.Column('altitude', sa.REAL(), nullable=True, comment='The telescope altitude [deg]'),
                    sa.Column('azimuth', sa.REAL(), nullable=True, comment='The telescope azimuth [deg]'),
                    sa.Column('insrot', sa.REAL(), nullable=True, comment='The telescope instrument rotation angle [deg]'),
                    sa.Column('adc_pa', sa.REAL(), nullable=True, comment='ADC PA at which the exposure started [deg]'),
                    sa.Column('m2_pos3', sa.REAL(), nullable=True, comment='Hexapod position [mm]'),
                    sa.Column('outside_temperature', sa.REAL(), nullable=True, comment='Outside temperature [K]'),
                    sa.Column('outside_pressure', sa.REAL(), nullable=True, comment='Outside pressure [hPa]'),
                    sa.Column('outside_humidity', sa.REAL(), nullable=True, comment='Outside humidity [%]'),
                    sa.Column('taken_at', sa.DateTime(), nullable=True, comment='The time at which the exposure was taken [YYYY-MM-DDThh-mm-sss]'),
                    sa.PrimaryKeyConstraint('agc_exposure_id'),
                    sa.UniqueConstraint('agc_exposure_id')
                    )
    op.create_table('agc_data',
                    sa.Column('agc_exposure_id', sa.Integer(), autoincrement=False, nullable=False, comment='AGC exposure number identifier'),
                    sa.Column('agc_camera_id', sa.Integer(), autoincrement=False, nullable=False, comment='AGC camera identifier'),
                    sa.Column('spot_id', sa.Integer(), autoincrement=False, nullable=False, comment='The AGC spot identifier'),
                    sa.Column('image_moment_00_pix', sa.REAL(), nullable=True),
                    sa.Column('centroid_x_pix', sa.REAL(), nullable=True, comment='The x-center of the spot image in AGC [pix]'),
                    sa.Column('centroid_y_pix', sa.REAL(), nullable=True, comment='The y-center of the spot image in AGC [pix]]'),
                    sa.Column('central_image_moment_11_pix', sa.REAL(), nullable=True, comment='The 11-component of the second moment'),
                    sa.Column('central_image_moment_20_pix', sa.REAL(), nullable=True, comment='The 20-component of the second moment'),
                    sa.Column('central_image_moment_02_pix', sa.REAL(), nullable=True, comment='The 02-component of the second moment'),
                    sa.Column('peak_pixel_x_pix', sa.Integer(), nullable=True, comment='The peak x pixel'),
                    sa.Column('peak_pixel_y_pix', sa.Integer(), nullable=True, comment='The peak y pixel'),
                    sa.Column('peak_intensity', sa.REAL(), nullable=True, comment='The peak intensity'),
                    sa.Column('background', sa.REAL(), nullable=True, comment='The background value'),
                    sa.Column('flags', sa.Integer(), nullable=True, comment='Flags'),
                    sa.ForeignKeyConstraint(['agc_exposure_id'], ['agc_exposure.agc_exposure_id'], ),
                    sa.PrimaryKeyConstraint('agc_exposure_id', 'agc_camera_id', 'spot_id'),
                    sa.UniqueConstraint('agc_exposure_id', 'agc_camera_id', 'spot_id')
                    )
    op.create_table('cobra_target',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False, comment='PFS visit identifier'),
                    sa.Column('iteration', sa.Integer(), autoincrement=False, nullable=False, comment='Iteration number for this frame'),
                    sa.Column('cobra_id', sa.Integer(), autoincrement=False, nullable=False, comment='Fiber identifier'),
                    sa.Column('pfs_config_id', sa.BigInteger(), nullable=True),
                    sa.Column('pfi_nominal_x_mm', sa.REAL(), nullable=True, comment='Nominal x-position on the PFI as determined from the  pfs_design_fiber table [mm]'),
                    sa.Column('pfi_nominal_y_mm', sa.REAL(), nullable=True, comment='Nominal y-position on the PFI as determined from the  pfs_design_fiber table [mm]'),
                    sa.Column('pfi_target_x_mm', sa.REAL(), nullable=True, comment='Target x-position on the PFI for each iteration'),
                    sa.Column('pfi_target_y_mm', sa.REAL(), nullable=True, comment='Target y-position on the PFI for each iteration'),
                    sa.Column('cobra_motor_model_id_theta', sa.Integer(), nullable=True),
                    sa.Column('motor_target_theta', sa.REAL(), nullable=True, comment='the target angle of the theta motor'),
                    sa.Column('motor_num_step_theta', sa.Integer(), nullable=True, comment='the number of steps the theta motor has undertaken'),
                    sa.Column('motor_on_time_theta', sa.REAL(), nullable=True, comment='the theta motor ontime value'),
                    sa.Column('cobra_motor_model_id_phi', sa.Integer(), nullable=True),
                    sa.Column('motor_target_phi', sa.REAL(), nullable=True, comment='the target angle of the phi motor'),
                    sa.Column('motor_num_step_phi', sa.Integer(), nullable=True, comment='the number of steps the phi motor has undertaken'),
                    sa.Column('motor_on_time_phi', sa.REAL(), nullable=True, comment='the phi motor ontime value'),
                    sa.Column('flags', sa.Integer(), nullable=True, comment='flags for movement etc.'),
                    sa.ForeignKeyConstraint(['pfs_visit_id'], ['pfs_visit.pfs_visit_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'iteration', 'cobra_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'iteration', 'cobra_id')
                    )
    op.create_table('mcs_pfi_transformation',
                    sa.Column('mcs_frame_id', sa.Integer(), autoincrement=False, nullable=False, comment='MCS frame identifier as generated from Gen2'),
                    sa.Column('x_trans', sa.REAL(), nullable=True, comment='Affine transformation x shift'),
                    sa.Column('y_trans', sa.REAL(), nullable=True, comment='Affine transformation y shift'),
                    sa.Column('x_scale', sa.REAL(), nullable=True, comment='Affine transformation x scale'),
                    sa.Column('y_scale', sa.REAL(), nullable=True, comment='Affine transformation y scale'),
                    sa.Column('angle', sa.REAL(), nullable=True, comment='Affine transformation rotation angle'),
                    sa.ForeignKeyConstraint(['mcs_frame_id'], ['mcs_exposure.mcs_frame_id'], ),
                    sa.PrimaryKeyConstraint('mcs_frame_id'),
                    sa.UniqueConstraint('mcs_frame_id')
                    )
    op.create_table('cobra_match',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False, comment='PFS visit identifier'),
                    sa.Column('iteration', sa.Integer(), autoincrement=False, nullable=False, comment='Iteration number for this frame'),
                    sa.Column('cobra_id', sa.Integer(), autoincrement=False, nullable=False, comment='Fiber identifier'),
                    sa.Column('mcs_frame_id', sa.Integer(), autoincrement=False, nullable=True, comment='MCS frame identifier as generated from Gen2'),
                    sa.Column('spot_id', sa.Integer(), autoincrement=False, nullable=True, comment='Corresponding MCS image spot identifier '),
                    sa.Column('pfi_center_x_mm', sa.REAL(), nullable=True, comment='Actual x-position on the PFI [mm]'),
                    sa.Column('pfi_center_y_mm', sa.REAL(), nullable=True, comment='Actual y-position on the PFI [mm]'),
                    sa.Column('flags', sa.Integer(), nullable=True, comment='flags for movement etc.'),
                    sa.ForeignKeyConstraint(['mcs_frame_id', 'spot_id'], ['mcs_data.mcs_frame_id', 'mcs_data.spot_id'], ),
                    sa.ForeignKeyConstraint(['pfs_visit_id', 'iteration', 'cobra_id'], ['cobra_target.pfs_visit_id', 'cobra_target.iteration', 'cobra_target.cobra_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'iteration', 'cobra_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'iteration', 'cobra_id')
                    )
    op.drop_index('ix_cobra_movement_mcs_frame_id', table_name='cobra_movement')
    op.drop_table('cobra_movement')
    op.drop_index('ix_cobra_status_mcs_frame_id', table_name='cobra_status')
    op.drop_table('cobra_status')
    # op.drop_table('test')
    op.add_column('pfs_design_fiber', sa.Column('pfi_nominal_x_mm', sa.REAL(), nullable=True, comment='Nominal x-position on the PFI [mm]'))
    op.add_column('pfs_design_fiber', sa.Column('pfi_nominal_y_mm', sa.REAL(), nullable=True, comment='Nominal y-position on the PFI [mm]'))
    op.drop_column('pfs_design_fiber', 'pfi_target_y_mm')
    op.drop_column('pfs_design_fiber', 'pfi_target_x_mm')
    op.drop_constraint('sps_annotation_annotation_id_key', 'sps_annotation', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('sps_annotation_annotation_id_key', 'sps_annotation', ['annotation_id'])
    op.add_column('pfs_design_fiber', sa.Column('pfi_target_x_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Target x-position on the PFI [mm]'))
    op.add_column('pfs_design_fiber', sa.Column('pfi_target_y_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Target y-position on the PFI [mm]'))
    op.drop_column('pfs_design_fiber', 'pfi_nominal_y_mm')
    op.drop_column('pfs_design_fiber', 'pfi_nominal_x_mm')
    op.create_table('test',
                    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('value', sa.REAL(), autoincrement=False, nullable=True)
                    )
    op.create_table('cobra_movement',
                    sa.Column('mcs_frame_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='MCS frame identifier. Provided by Gen2'),
                    sa.Column('cobra_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Fiber identifier'),
                    sa.Column('cobra_motor_calib_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('motor_num_step_theta', sa.INTEGER(), autoincrement=False, nullable=True, comment='the number of steps the theta motor has undertaken'),
                    sa.Column('motor_on_time_theta', sa.REAL(), autoincrement=False, nullable=True, comment='the theta motor ontime value'),
                    sa.Column('motor_num_step_phi', sa.INTEGER(), autoincrement=False, nullable=True, comment='the number of steps the phi motor has undertaken'),
                    sa.Column('motor_on_time_phi', sa.REAL(), autoincrement=False, nullable=True, comment='the phi motor ontime value'),
                    sa.ForeignKeyConstraint(['cobra_motor_calib_id'], ['cobra_motor_calib.cobra_motor_calib_id'], name='cobra_movement_cobra_motor_calib_id_fkey'),
                    sa.ForeignKeyConstraint(['mcs_frame_id', 'cobra_id'], ['cobra_status.mcs_frame_id', 'cobra_status.cobra_id'], name='cobra_movement_mcs_frame_id_fkey'),
                    sa.PrimaryKeyConstraint('mcs_frame_id', 'cobra_id', name='cobra_movement_pkey'),
                    sa.UniqueConstraint('mcs_frame_id', 'cobra_id', name='cobra_movement_mcs_frame_id_cobra_id_key')
                    )
    op.create_index('ix_cobra_movement_mcs_frame_id', 'cobra_movement', ['mcs_frame_id'], unique=False)
    op.create_table('cobra_status',
                    sa.Column('mcs_frame_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('cobra_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='Fiber identifier'),
                    sa.Column('spot_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Corresponding MCS image spot identifier '),
                    sa.Column('pfs_config_id', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('iteration', sa.INTEGER(), autoincrement=False, nullable=True, comment='Iteration number for this frame'),
                    sa.Column('pfi_target_x_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Target x-position on the PFI as determined from the  pfs_design_fiber table [mm]'),
                    sa.Column('pfi_target_y_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Target y-position on the PFI as determined from the  pfs_design_fiber table [mm]'),
                    sa.Column('pfi_center_x_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Actual x-position on the PFI [mm]'),
                    sa.Column('pfi_center_y_mm', sa.REAL(), autoincrement=False, nullable=True, comment='Actual y-position on the PFI [mm]'),
                    sa.ForeignKeyConstraint(['mcs_frame_id', 'spot_id'], ['mcs_data.mcs_frame_id', 'mcs_data.spot_id'], name='cobra_status_mcs_frame_id_fkey'),
                    sa.PrimaryKeyConstraint('mcs_frame_id', 'cobra_id', name='cobra_status_pkey'),
                    sa.UniqueConstraint('mcs_frame_id', 'cobra_id', name='cobra_status_mcs_frame_id_cobra_id_key')
                    )
    op.create_index('ix_cobra_status_mcs_frame_id', 'cobra_status', ['mcs_frame_id'], unique=False)
    op.drop_table('cobra_match')
    op.drop_table('mcs_pfi_transformation')
    op.drop_table('cobra_target')
    op.drop_table('agc_data')
    op.drop_table('agc_exposure')
    # ### end Alembic commands ###
