"""update to 0.1.7

Revision ID: a64afbc58d16
Revises: ff29cf5a1676
Create Date: 2021-11-12 13:27:24.787157

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a64afbc58d16'
down_revision = 'ff29cf5a1676'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mcs_camera',
                    sa.Column('mcs_camera_id', sa.Integer(), autoincrement=False, nullable=False, comment='MCS camera identifier [e.g. 0=Canon_50M, 1=RMOD_71M]'),
                    sa.Column('mcs_camera_name', sa.String(), nullable=True, comment='MCS camera name [e.g. "Canon_50M", "RMOD_71M"]'),
                    sa.Column('comments', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('mcs_camera_id')
                    )
    op.add_column('calib', sa.Column('pfs_design_id', sa.BigInteger(), nullable=True))
    op.drop_constraint('calib_pfs_config_id_fkey', 'calib', type_='foreignkey')
    op.create_foreign_key(None, 'calib', 'pfs_design', ['pfs_design_id'], ['pfs_design_id'])
    op.drop_column('calib', 'pfs_config_id')

    op.add_column('mcs_exposure', sa.Column('mcs_camera_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mcs_exposure', 'mcs_camera', ['mcs_camera_id'], ['mcs_camera_id'])

    op.add_column('pfs_config_fiber', sa.Column('comments', sa.String(), nullable=True, comment='comments'))
    op.add_column('pfs_config_fiber', sa.Column('fiber_id', sa.Integer(), autoincrement=False, nullable=False))
    op.add_column('pfs_config_fiber', sa.Column('pfs_design_id', sa.BigInteger(), autoincrement=False, nullable=False))
    op.add_column('pfs_config_fiber', sa.Column('visit0', sa.Integer(), autoincrement=False, nullable=False, comment='The first visit of the set'))
    op.create_unique_constraint(None, 'pfs_config_fiber', ['pfs_design_id', 'visit0', 'fiber_id'])
    op.drop_constraint('pfs_config_fiber_pfs_config_id_cobra_id_key', 'pfs_config_fiber', type_='unique')
    op.drop_constraint('pfs_config_fiber_pfs_config_id_fkey', 'pfs_config_fiber', type_='foreignkey')
    op.drop_constraint('pfs_config_fiber_cobra_id_fkey', 'pfs_config_fiber', type_='foreignkey')
    op.drop_constraint('pfs_config_fiber_target_id_fkey', 'pfs_config_fiber', type_='foreignkey')

    op.create_unique_constraint(None, 'pfs_config', ['pfs_design_id', 'visit0'])
    op.create_foreign_key(None, 'pfs_config_fiber', 'pfs_config', ['pfs_design_id', 'visit0'], ['pfs_design_id', 'visit0'])

    op.drop_column('pfs_config_fiber', 'cobra_id')
    op.drop_column('pfs_config_fiber', 'target_id')
    op.drop_column('pfs_config_fiber', 'pfs_config_id')

    op.drop_constraint('pfs_config_pfs_config_id_key', 'pfs_config', type_='unique')
    op.drop_column('pfs_config', 'pfs_config_id')

    op.add_column('pfs_design', sa.Column('design_name', sa.String(), nullable=True, comment='Human-readable name for the design (designName)'))
    op.drop_constraint('pfs_design_tile_id_fkey', 'pfs_design', type_='foreignkey')
    op.add_column('pfs_design_fiber', sa.Column('comments', sa.String(), nullable=True, comment='comments'))
    op.add_column('pfs_design_fiber', sa.Column('fiber_id', sa.Integer(), autoincrement=False, nullable=False))
    op.add_column('pfs_design_fiber', sa.Column('fiber_status', sa.Integer(), nullable=True, comment='fiberStatus: enumerated e.g. GOOD,BROKENFIBER,BLOCKED,BLACKSPOT'))
    op.add_column('pfs_design_fiber', sa.Column('target_cat_id', sa.Integer(), nullable=True, comment='catId of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_dec', sa.FLOAT(), nullable=True, comment='Dec. of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_obj_id', sa.BigInteger(), nullable=True, comment='objId of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_patch', sa.String(), nullable=True, comment='patch of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_ra', sa.FLOAT(), nullable=True, comment='R.A. of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_tract', sa.Integer(), nullable=True, comment='tract of the target'))
    op.add_column('pfs_design_fiber', sa.Column('target_type', sa.Integer(), nullable=True, comment='targetType: enumerated e.g. SCIENCE,SKY,FLUXSTD'))
    op.drop_constraint('pfs_design_fiber_pfs_design_id_cobra_id_key', 'pfs_design_fiber', type_='unique')
    op.drop_constraint('pfs_design_fiber_cobra_id_fkey', 'pfs_design_fiber', type_='foreignkey')
    op.drop_constraint('pfs_design_fiber_target_id_fkey', 'pfs_design_fiber', type_='foreignkey')
    op.create_unique_constraint(None, 'pfs_design_fiber', ['pfs_design_id', 'fiber_id'])
    op.drop_column('pfs_design_fiber', 'cobra_id')
    op.drop_column('pfs_design_fiber', 'target_id')

    op.create_table('pfs_design_agc',
                    sa.Column('pfs_design_id', sa.BigInteger(), autoincrement=False, nullable=False),
                    sa.Column('guide_star_id', sa.BigInteger(), autoincrement=False, nullable=False, comment='GuideStar identifier'),
                    sa.Column('epoch', sa.String(), nullable=True, comment='epoch'),
                    sa.Column('guide_star_ra', sa.FLOAT(), nullable=True, comment='GuideStar R.A. [deg.]'),
                    sa.Column('guide_star_dec', sa.FLOAT(), nullable=True, comment='GuideStar Dec. [deg.]'),
                    sa.Column('guide_star_pm_ra', sa.REAL(), nullable=True, comment='GuideStar proper motion in R.A. [mas/yr]'),
                    sa.Column('guide_star_pm_dec', sa.REAL(), nullable=True, comment='GuideStar proper motion in Dec. [mas/yr]'),
                    sa.Column('guide_star_parallax', sa.REAL(), nullable=True, comment='GuideStar parallax [mas]'),
                    sa.Column('guide_star_magnitude', sa.REAL(), nullable=True, comment='GuideStar magnitude [mag]'),
                    sa.Column('passband', sa.String(), nullable=True, comment='passband'),
                    sa.Column('guide_star_color', sa.REAL(), nullable=True, comment='GuideStar color [mag]'),
                    sa.Column('agc_camera_id', sa.Integer(), nullable=True, comment='AGC camera identifier'),
                    sa.Column('agc_target_x_pix', sa.REAL(), nullable=True, comment='Target x-position on the AGC [pix]'),
                    sa.Column('agc_target_y_pix', sa.REAL(), nullable=True, comment='Target y-position on the AGC [pix]'),
                    sa.Column('comments', sa.String(), nullable=True, comment='comments'),
                    sa.ForeignKeyConstraint(['pfs_design_id'], ['pfs_design.pfs_design_id'], ),
                    sa.PrimaryKeyConstraint('pfs_design_id', 'guide_star_id'),
                    sa.UniqueConstraint('pfs_design_id', 'guide_star_id')
                    )
    op.create_table('agc_match',
                    sa.Column('agc_exposure_id', sa.Integer(), autoincrement=False, nullable=False, comment='AGC exposure number identifier'),
                    sa.Column('agc_camera_id', sa.Integer(), autoincrement=False, nullable=False, comment='AGC camera identifier'),
                    sa.Column('spot_id', sa.Integer(), autoincrement=False, nullable=False, comment='The AGC spot identifier'),
                    sa.Column('pfs_design_id', sa.BigInteger(), nullable=True, comment='pfsDesignId'),
                    sa.Column('guide_star_id', sa.BigInteger(), nullable=True, comment='GuideStar identifier'),
                    sa.Column('agc_nominal_x_mm', sa.REAL(), nullable=True, comment='Nominal designed x-position on the AGC [PFI mm]'),
                    sa.Column('agc_nominal_y_mm', sa.REAL(), nullable=True, comment='Nominal designed y-position on the AGC [PFI mm]'),
                    sa.Column('agc_center_x_mm', sa.REAL(), nullable=True, comment='Center measured x-position on the AGC [PFI mm]'),
                    sa.Column('agc_center_y_mm', sa.REAL(), nullable=True, comment='Center measured y-position on the AGC [PFI mm]'),
                    sa.Column('flags', sa.Integer(), nullable=True, comment='Flags'),
                    sa.ForeignKeyConstraint(['agc_exposure_id', 'agc_camera_id', 'spot_id'], ['agc_data.agc_exposure_id', 'agc_data.agc_camera_id', 'agc_data.spot_id'], ),
                    sa.PrimaryKeyConstraint('agc_exposure_id', 'agc_camera_id', 'spot_id'),
                    sa.UniqueConstraint('agc_exposure_id', 'agc_camera_id', 'spot_id')
                    )
    op.create_table('pfs_config_agc',
                    sa.Column('pfs_design_id', sa.BigInteger(), autoincrement=False, nullable=False),
                    sa.Column('visit0', sa.Integer(), autoincrement=False, nullable=False, comment='The first visit of the set'),
                    sa.Column('guide_star_id', sa.BigInteger(), autoincrement=False, nullable=False, comment='GuideStar identifier'),
                    sa.Column('agc_camera_id', sa.Integer(), nullable=True, comment='AGC camera identifier'),
                    sa.Column('agc_final_x_pix', sa.REAL(), nullable=True, comment='Final x-position on the AGC [pix]'),
                    sa.Column('agc_final_y_pix', sa.REAL(), nullable=True, comment='Final y-position on the AGC [pix]'),
                    sa.Column('comments', sa.String(), nullable=True, comment='comments'),
                    sa.ForeignKeyConstraint(['pfs_design_id', 'visit0'], ['pfs_config.pfs_design_id', 'pfs_config.visit0'], ),
                    sa.PrimaryKeyConstraint('pfs_design_id', 'visit0', 'guide_star_id'),
                    sa.UniqueConstraint('pfs_design_id', 'visit0', 'guide_star_id')
                    )

    op.create_unique_constraint(None, 'env_condition', ['pfs_visit_id', 'status_sequence_id'])
    op.create_unique_constraint(None, 'obs_condition', ['pfs_visit_id', 'status_sequence_id'])
    op.create_unique_constraint(None, 'tel_status', ['pfs_visit_id', 'status_sequence_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tel_status', type_='unique')
    op.add_column('pfs_design_fiber', sa.Column('target_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('pfs_design_fiber', sa.Column('cobra_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('pfs_design_fiber_target_id_fkey', 'pfs_design_fiber', 'target', ['target_id'], ['target_id'])
    op.create_foreign_key('pfs_design_fiber_cobra_id_fkey', 'pfs_design_fiber', 'cobra', ['cobra_id'], ['cobra_id'])
    op.drop_constraint(None, 'pfs_design_fiber', type_='unique')
    op.create_unique_constraint('pfs_design_fiber_pfs_design_id_cobra_id_key', 'pfs_design_fiber', ['pfs_design_id', 'cobra_id'])
    op.drop_column('pfs_design_fiber', 'target_type')
    op.drop_column('pfs_design_fiber', 'target_tract')
    op.drop_column('pfs_design_fiber', 'target_ra')
    op.drop_column('pfs_design_fiber', 'target_patch')
    op.drop_column('pfs_design_fiber', 'target_obj_id')
    op.drop_column('pfs_design_fiber', 'target_dec')
    op.drop_column('pfs_design_fiber', 'target_cat_id')
    op.drop_column('pfs_design_fiber', 'fiber_status')
    op.drop_column('pfs_design_fiber', 'fiber_id')
    op.drop_column('pfs_design_fiber', 'comments')
    op.create_foreign_key('pfs_design_tile_id_fkey', 'pfs_design', 'tile', ['tile_id'], ['tile_id'])
    op.drop_column('pfs_design', 'design_name')
    op.add_column('pfs_config_fiber', sa.Column('pfs_config_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('pfs_config_fiber', sa.Column('target_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('pfs_config_fiber', sa.Column('cobra_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'pfs_config_fiber', type_='foreignkey')
    op.create_foreign_key('pfs_config_fiber_target_id_fkey', 'pfs_config_fiber', 'target', ['target_id'], ['target_id'])
    op.create_foreign_key('pfs_config_fiber_cobra_id_fkey', 'pfs_config_fiber', 'cobra', ['cobra_id'], ['cobra_id'])
    op.create_foreign_key('pfs_config_fiber_pfs_config_id_fkey', 'pfs_config_fiber', 'pfs_config', ['pfs_config_id'], ['pfs_config_id'])
    op.drop_constraint(None, 'pfs_config_fiber', type_='unique')
    op.create_unique_constraint('pfs_config_fiber_pfs_config_id_cobra_id_key', 'pfs_config_fiber', ['pfs_config_id', 'cobra_id'])
    op.drop_column('pfs_config_fiber', 'visit0')
    op.drop_column('pfs_config_fiber', 'pfs_design_id')
    op.drop_column('pfs_config_fiber', 'fiber_id')
    op.drop_column('pfs_config_fiber', 'comments')
    op.add_column('pfs_config', sa.Column('pfs_config_id', sa.INTEGER(), server_default=sa.text("nextval('pfs_config_pfs_config_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'pfs_config', type_='unique')
    op.create_unique_constraint('pfs_config_pfs_config_id_key', 'pfs_config', ['pfs_config_id'])
    op.drop_constraint(None, 'obs_condition', type_='unique')
    op.drop_constraint(None, 'mcs_exposure', type_='foreignkey')
    op.drop_column('mcs_exposure', 'mcs_camera_id')
    op.drop_constraint(None, 'env_condition', type_='unique')
    op.add_column('calib', sa.Column('pfs_config_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'calib', type_='foreignkey')
    op.create_foreign_key('calib_pfs_config_id_fkey', 'calib', 'pfs_config', ['pfs_config_id'], ['pfs_config_id'])
    op.drop_column('calib', 'pfs_design_id')
    op.alter_column('agc_data', 'image_moment_00_pix',
                    existing_type=sa.REAL(),
                    comment=None,
                    existing_comment='',
                    existing_nullable=True)
    op.create_table('test',
                    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('value', sa.REAL(), autoincrement=False, nullable=True)
                    )
    op.drop_table('pfs_config_agc')
    op.drop_table('agc_match')
    op.drop_table('pfs_design_agc')
    op.drop_table('mcs_camera')
    # ### end Alembic commands ###
