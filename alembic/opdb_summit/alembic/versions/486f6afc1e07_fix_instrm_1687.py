"""fix INSTRM-1687

Revision ID: 486f6afc1e07
Revises: 1cbebc1b27ea
Create Date: 2023-06-30 16:48:06.508566

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '486f6afc1e07'
down_revision = '1cbebc1b27ea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cobra_move',
                    sa.Column('pfs_visit_id', sa.Integer(), autoincrement=False, nullable=False, comment='PFS visit identifier'),
                    sa.Column('iteration', sa.Integer(), autoincrement=False, nullable=False, comment='Iteration number for this frame'),
                    sa.Column('cobra_id', sa.Integer(), autoincrement=False, nullable=False, comment='Fiber identifier'),
                    sa.Column('cobra_motor_model_id_theta', sa.Integer(), nullable=True),
                    sa.Column('motor_target_theta', sa.REAL(), nullable=True, comment='the target angle of the theta motor'),
                    sa.Column('motor_num_step_theta', sa.Integer(), nullable=True, comment='the number of steps the theta motor has undertaken'),
                    sa.Column('motor_on_time_theta', sa.REAL(), nullable=True, comment='the theta motor ontime value'),
                    sa.Column('cobra_motor_model_id_phi', sa.Integer(), nullable=True),
                    sa.Column('motor_target_phi', sa.REAL(), nullable=True, comment='the target angle of the phi motor'),
                    sa.Column('motor_num_step_phi', sa.Integer(), nullable=True, comment='the number of steps the phi motor has undertaken'),
                    sa.Column('motor_on_time_phi', sa.REAL(), nullable=True, comment='the phi motor ontime value'),
                    sa.Column('flags', sa.Integer(), nullable=True, comment='flags for movement etc.'),
                    sa.ForeignKeyConstraint(['pfs_visit_id', 'iteration', 'cobra_id'], ['cobra_target.pfs_visit_id', 'cobra_target.iteration', 'cobra_target.cobra_id'], ),
                    sa.PrimaryKeyConstraint('pfs_visit_id', 'iteration', 'cobra_id'),
                    sa.UniqueConstraint('pfs_visit_id', 'iteration', 'cobra_id')
                    )
    op.drop_constraint('cobra_match_pfs_visit_id_fkey', 'cobra_match', type_='foreignkey')
    #op.create_foreign_key(None, 'cobra_match', 'cobra_move', ['pfs_visit_id', 'iteration', 'cobra_id'], ['pfs_visit_id', 'iteration', 'cobra_id'])
    op.drop_column('cobra_target', 'cobra_motor_model_id_theta')
    op.drop_column('cobra_target', 'cobra_motor_model_id_phi')
    op.drop_column('cobra_target', 'motor_target_phi')
    op.drop_column('cobra_target', 'motor_target_theta')
    op.drop_column('cobra_target', 'motor_on_time_theta')
    op.drop_column('cobra_target', 'motor_on_time_phi')
    op.drop_column('cobra_target', 'motor_num_step_theta')
    op.drop_column('cobra_target', 'motor_num_step_phi')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cobra_target', sa.Column('motor_num_step_phi', sa.INTEGER(), autoincrement=False, nullable=True, comment='the number of steps the phi motor has undertaken'))
    op.add_column('cobra_target', sa.Column('motor_num_step_theta', sa.INTEGER(), autoincrement=False, nullable=True, comment='the number of steps the theta motor has undertaken'))
    op.add_column('cobra_target', sa.Column('motor_on_time_phi', sa.REAL(), autoincrement=False, nullable=True, comment='the phi motor ontime value'))
    op.add_column('cobra_target', sa.Column('motor_on_time_theta', sa.REAL(), autoincrement=False, nullable=True, comment='the theta motor ontime value'))
    op.add_column('cobra_target', sa.Column('motor_target_theta', sa.REAL(), autoincrement=False, nullable=True, comment='the target angle of the theta motor'))
    op.add_column('cobra_target', sa.Column('motor_target_phi', sa.REAL(), autoincrement=False, nullable=True, comment='the target angle of the phi motor'))
    op.add_column('cobra_target', sa.Column('cobra_motor_model_id_phi', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('cobra_target', sa.Column('cobra_motor_model_id_theta', sa.INTEGER(), autoincrement=False, nullable=True))
    #op.drop_constraint(None, 'cobra_match', type_='foreignkey')
    op.create_foreign_key('cobra_match_pfs_visit_id_fkey', 'cobra_match', 'cobra_target', ['pfs_visit_id', 'iteration', 'cobra_id'], ['pfs_visit_id', 'iteration', 'cobra_id'])
    op.drop_table('cobra_move')
    # ### end Alembic commands ###
