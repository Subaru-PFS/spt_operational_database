"""opdb summit schema updated to 0.2.1

Revision ID: c61de880d72a
Revises: 910c4ead6bc1
Create Date: 2022-09-14 20:32:59.191717

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c61de880d72a'
down_revision = '910c4ead6bc1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('test')
    # op.alter_column('agc_data', 'image_moment_00_pix',
    #           existing_type=sa.REAL(),
    #           comment='',
    #           existing_nullable=True)
    #op.create_foreign_key(None, 'agc_exposure', 'pfs_visit', ['pfs_visit_id'], ['pfs_visit_id'])
    op.add_column('mcs_data', sa.Column('flags', sa.Integer(), nullable=True, comment='Flags about the fitted centroids parameters'))

    op.add_column('mcs_pfi_transformation', sa.Column('x0', sa.REAL(), nullable=True, comment='Transformation x shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('y0', sa.REAL(), nullable=True, comment='Transformation y shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('dscale', sa.REAL(), nullable=True, comment='First transformation scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('scale2', sa.REAL(), nullable=True, comment='Second transformation scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('theta', sa.REAL(), nullable=True, comment='Transformation rotation angle'))
    op.add_column('mcs_pfi_transformation', sa.Column('alpha_rot', sa.REAL(), nullable=True, comment='coefficient for the dtheta^2 term in the penalty function'))
    op.add_column('mcs_pfi_transformation', sa.Column('camera_name', sa.String(), nullable=True, comment='camera name for transformation function'))

    op.drop_column('mcs_pfi_transformation', 'x_trans')
    op.drop_column('mcs_pfi_transformation', 'y_trans')
    op.drop_column('mcs_pfi_transformation', 'x_scale')
    op.drop_column('mcs_pfi_transformation', 'y_scale')
    op.drop_column('mcs_pfi_transformation', 'angle')

    op.add_column('tel_status', sa.Column('dither_ra', sa.REAL(), nullable=True, comment='Offset to the R.A. coordinate [arcsec]'))
    op.add_column('tel_status', sa.Column('dither_dec', sa.REAL(), nullable=True, comment='Offset to the DEC. coordinate [arcsec]'))
    op.add_column('tel_status', sa.Column('dither_pa', sa.REAL(), nullable=True, comment='Offset to the INST_PA [arcsec]'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tel_status', 'dither_pa')
    op.drop_column('tel_status', 'dither_dec')
    op.drop_column('tel_status', 'dither_ra')

    op.add_column('mcs_pfi_transformation', sa.Column('x_trans', sa.REAL(), autoincrement=False, nullable=True, comment='Affine transformation x shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('y_trans', sa.REAL(), autoincrement=False, nullable=True, comment='Affine transformation y shift'))
    op.add_column('mcs_pfi_transformation', sa.Column('x_scale', sa.REAL(), autoincrement=False, nullable=True, comment='Affine transformation x scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('y_scale', sa.REAL(), autoincrement=False, nullable=True, comment='Affine transformation y scale'))
    op.add_column('mcs_pfi_transformation', sa.Column('angle', sa.REAL(), autoincrement=False, nullable=True, comment='Affine transformation rotation angle'))

    op.drop_column('mcs_pfi_transformation', 'camera_name')
    op.drop_column('mcs_pfi_transformation', 'alpha_rot')
    op.drop_column('mcs_pfi_transformation', 'theta')
    op.drop_column('mcs_pfi_transformation', 'scale2')
    op.drop_column('mcs_pfi_transformation', 'dscale')
    op.drop_column('mcs_pfi_transformation', 'y0')
    op.drop_column('mcs_pfi_transformation', 'x0')

    op.drop_column('mcs_data', 'flags')

    #op.drop_constraint(None, 'agc_exposure', type_='foreignkey')
    # op.alter_column('agc_data', 'image_moment_00_pix',
    #                existing_type=sa.REAL(),
    #                comment=None,
    #                existing_comment='',
    #                existing_nullable=True)
    # op.create_table('test',
    #                sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    #                sa.Column('value', sa.REAL(), autoincrement=False, nullable=True)
    #                )
    # ### end Alembic commands ###
